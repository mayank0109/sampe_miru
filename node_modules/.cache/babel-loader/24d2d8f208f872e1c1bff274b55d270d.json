{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:components:Reports:Filters:filterOptions.ts\");\n\nimport dayjs from \"dayjs\";\nimport { month, getDayWithSuffix } from \"../../../utils/dateUtil\";\n\nvar getWeek = function getWeek(isCurrentWeek) {\n  var currentDate = new Date();\n  var first = currentDate.getDate() - currentDate.getDay();\n  var weekFirstDay = isCurrentWeek ? first : first - 7;\n  var last = weekFirstDay + 6;\n  var firstday = dayjs(new Date(currentDate.setDate(weekFirstDay)));\n  var lastday = dayjs(new Date(currentDate.setDate(last)));\n  var completeCurrentDay = \"\".concat(getDayWithSuffix(firstday.date()), \" \").concat(month[firstday.month()]);\n  var completeLastWeekDay = \"\".concat(getDayWithSuffix(lastday.date()), \" \").concat(month[lastday.month()]);\n  return isCurrentWeek ? \"This Week (\".concat(completeCurrentDay, \" - \").concat(completeLastWeekDay, \")\") : \"Last Week (\".concat(completeCurrentDay, \" - \").concat(completeLastWeekDay, \")\");\n};\n\nvar getMonth = function getMonth(isCurrentMonth) {\n  var currentDate = new Date();\n  var monthCount = isCurrentMonth ? dayjs(currentDate) : dayjs(currentDate).subtract(1, \"month\");\n  var monthStr = month[monthCount.month()];\n  var totalDaysOfCurrentMonth = dayjs(monthCount).daysInMonth();\n  var lastdayOfMonth = totalDaysOfCurrentMonth === 30 ? \"\".concat(totalDaysOfCurrentMonth, \"th\") : \"\".concat(totalDaysOfCurrentMonth, \"st\");\n  return isCurrentMonth ? \"This Month (1st \".concat(monthStr, \" - \").concat(lastdayOfMonth, \" \").concat(monthStr, \")\") : \"Last Month (1st \".concat(monthStr, \" - \").concat(lastdayOfMonth, \" \").concat(monthStr, \")\");\n};\n\nvar getDateRangeOptions = function getDateRangeOptions() {\n  var thisWeek = getWeek(true);\n  var thisMonth = getMonth(true);\n  var previousMonth = getMonth(false);\n  var previousweek = getWeek(false);\n  return [{\n    value: \"this_month\",\n    label: thisMonth\n  }, {\n    value: \"last_month\",\n    label: previousMonth\n  }, {\n    value: \"this_week\",\n    label: thisWeek\n  }, {\n    value: \"last_week\",\n    label: previousweek\n  }];\n};\n\nvar dateRangeOptions = [{\n  value: \"\",\n  label: \"All\"\n}].concat(_toConsumableArray(getDateRangeOptions()));\nvar statusOption = [{\n  value: \"billed\",\n  label: \"BILLED\"\n}, {\n  value: \"unbilled\",\n  label: \"UNBILLED\"\n}, {\n  value: \"nonBilled\",\n  label: \"NON BILLABLE\"\n}];\nvar groupBy = [{\n  value: \"\",\n  label: \"None\"\n}, {\n  value: \"team_member\",\n  label: \"Team member\"\n}, {\n  value: \"client\",\n  label: \"Client\"\n}, {\n  value: \"project\",\n  label: \"Project\"\n}, {\n  value: \"Week\",\n  label: \"Week\"\n}];\nexport { dateRangeOptions, statusOption, groupBy };","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/Reports/Filters/filterOptions.ts"],"names":["dayjs","month","getDayWithSuffix","getWeek","isCurrentWeek","currentDate","Date","first","getDate","getDay","weekFirstDay","last","firstday","setDate","lastday","completeCurrentDay","date","completeLastWeekDay","getMonth","isCurrentMonth","monthCount","subtract","monthStr","totalDaysOfCurrentMonth","daysInMonth","lastdayOfMonth","getDateRangeOptions","thisWeek","thisMonth","previousMonth","previousweek","value","label","dateRangeOptions","statusOption","groupBy"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\nimport { month, getDayWithSuffix } from \"../../../utils/dateUtil\";\n\nconst getWeek = (isCurrentWeek) => {\n  const currentDate = new Date();\n\n  const first = currentDate.getDate() - currentDate.getDay();\n  const weekFirstDay = isCurrentWeek ? first : first - 7;\n  const last = weekFirstDay + 6;\n\n  const firstday = dayjs(new Date(currentDate.setDate(weekFirstDay)));\n  const lastday = dayjs(new Date(currentDate.setDate(last)));\n  const completeCurrentDay = `${getDayWithSuffix(firstday.date())} ${month[firstday.month()]}`;\n  const completeLastWeekDay = `${getDayWithSuffix(lastday.date())} ${month[lastday.month()]}`;\n  return isCurrentWeek ? `This Week (${completeCurrentDay} - ${completeLastWeekDay})` :\n    `Last Week (${completeCurrentDay} - ${completeLastWeekDay})`;\n};\n\nconst getMonth = (isCurrentMonth) => {\n  const currentDate = new Date();\n\n  const monthCount = isCurrentMonth ? dayjs(currentDate) : dayjs(currentDate).subtract(1, \"month\");\n  const monthStr = month[monthCount.month()];\n  const totalDaysOfCurrentMonth = dayjs(monthCount).daysInMonth();\n  const lastdayOfMonth = totalDaysOfCurrentMonth === 30 ? `${totalDaysOfCurrentMonth}th` : `${totalDaysOfCurrentMonth}st`;\n\n  return isCurrentMonth ? `This Month (1st ${monthStr} - ${lastdayOfMonth} ${monthStr})` :\n    `Last Month (1st ${monthStr} - ${lastdayOfMonth} ${monthStr})`;\n};\n\nconst getDateRangeOptions = () => {\n  const thisWeek = getWeek(true);\n  const thisMonth = getMonth(true);\n  const previousMonth = getMonth(false);\n  const previousweek = getWeek(false);\n\n  return [\n    { value: \"this_month\", label: thisMonth },\n    { value: \"last_month\", label: previousMonth },\n    { value: \"this_week\", label: thisWeek },\n    { value: \"last_week\", label: previousweek }\n  ];\n};\n\nconst dateRangeOptions = [\n  { value: \"\", label: \"All\" },\n  ...getDateRangeOptions()\n];\n\nconst statusOption = [\n  { value: \"billed\", label: \"BILLED\" },\n  { value: \"unbilled\", label: \"UNBILLED\" },\n  { value: \"nonBilled\", label: \"NON BILLABLE\" }\n];\n\nconst groupBy = [\n  { value: \"\", label: \"None\" },\n  { value: \"team_member\", label: \"Team member\" },\n  { value: \"client\", label: \"Client\" },\n  { value: \"project\", label: \"Project\" },\n  { value: \"Week\", label: \"Week\" }\n];\n\nexport {\n  dateRangeOptions,\n  statusOption,\n  groupBy\n};\n"]},"metadata":{},"sourceType":"module"}