{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/Invoices/List/SendInvoice/index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:components:Invoices:List:SendInvoice:index.tsx\");\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport invoicesApi from \"apis/invoices\";\nimport cn from \"classnames\";\nimport Toastr from \"common/Toastr\";\nimport useOutsideClick from \"helpers/outsideClick\";\nimport { X } from \"phosphor-react\";\nimport { isEmailValid, emailSubject, emailBody, isDisabled, buttonText } from \"./utils\";\nimport { ApiStatus as InvoiceStatus } from \"../../../../constants\";\n\nvar Recipient = function Recipient(_ref) {\n  var email = _ref.email,\n      handleClick = _ref.handleClick;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center px-2 py-1 m-0.5 space-x-2 border rounded-full bg-miru-gray-400 w-fit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, email), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"text-miru-black-1000 hover:text-miru-red-400\",\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 14,\n    weight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar SendInvoice = function SendInvoice(_ref2) {\n  var invoice = _ref2.invoice,\n      setIsSending = _ref2.setIsSending,\n      isSending = _ref2.isSending;\n\n  var _useState = useState(InvoiceStatus.IDLE),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState({\n    subject: emailSubject(invoice),\n    message: emailBody(invoice),\n    recipients: [invoice.client.email]\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invoiceEmail = _useState4[0],\n      setInvoiceEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newRecipient = _useState6[0],\n      setNewRecipient = _useState6[1];\n\n  var _useState7 = useState(\"10ch\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      width = _useState8[0],\n      setWidth = _useState8[1];\n\n  var modal = useRef();\n  var input = useRef();\n  useOutsideClick(modal, function () {\n    return setIsSending(false);\n  }, isSending);\n  useEffect(function () {\n    var length = newRecipient.length;\n    setWidth(\"\".concat(length > 10 ? length : 10, \"ch\"));\n  }, [newRecipient]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var payload, _yield$invoicesApi$se, notice;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              event.preventDefault();\n              setStatus(InvoiceStatus.LOADING);\n              payload = {\n                invoice_email: invoiceEmail\n              };\n              _context.next = 6;\n              return invoicesApi.sendInvoice(invoice.id, payload);\n\n            case 6:\n              _yield$invoicesApi$se = _context.sent;\n              notice = _yield$invoicesApi$se.data.notice;\n              Toastr.success(notice);\n              setStatus(InvoiceStatus.SUCCESS);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              setStatus(InvoiceStatus.ERROR);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleRemove = function handleRemove(recipient) {\n    var recipients = invoiceEmail.recipients.filter(function (r) {\n      return r !== recipient;\n    });\n    setInvoiceEmail(_objectSpread(_objectSpread({}, invoiceEmail), {}, {\n      recipients: recipients\n    }));\n  };\n\n  var handleInput = function handleInput(event) {\n    var recipients = invoiceEmail.recipients;\n\n    if (isEmailValid(newRecipient) && event.key === \"Enter\") {\n      setInvoiceEmail(_objectSpread(_objectSpread({}, invoiceEmail), {}, {\n        recipients: recipients.concat(newRecipient)\n      }));\n      setNewRecipient(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed inset-0 z-10 overflow-y-auto\",\n    \"aria-labelledby\": \"modal-title\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hidden sm:inline-block sm:align-middle sm:h-screen\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"\\u200B\"), /*#__PURE__*/React.createElement(\"div\", {\n    ref: modal,\n    className: \"relative inline-block overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4 pt-5 pb-4 bg-white sm:p-6 sm:pb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-between mt-2 mb-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"form__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Send Invoice #\", invoice.invoiceNumber), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"text-miru-gray-1000\",\n    onClick: function onClick() {\n      return setIsSending(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    weight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"space-y-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"flex flex-col field_with_errors\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"to\",\n    className: \"mb-2 form__label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"To\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return input.current.focus();\n    },\n    className: cn(\"p-1.5 rounded bg-miru-gray-100 flex flex-wrap\", {\n      \"h-9\": !invoiceEmail.recipients\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, invoiceEmail.recipients.map(function (recipient) {\n    return /*#__PURE__*/React.createElement(Recipient, {\n      key: recipient,\n      email: recipient,\n      handleClick: function handleClick() {\n        return handleRemove(recipient);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: input,\n    style: {\n      width: width\n    },\n    className: cn(\"py-2 mx-1.5 rounded bg-miru-gray-100 w-fit cursor-text focus:outline-none\", {\n      \"text-miru-red-400\": !isEmailValid(newRecipient)\n    }),\n    type: \"email\",\n    name: \"to\",\n    value: newRecipient,\n    onChange: function onChange(e) {\n      return setNewRecipient(e.target.value.trim());\n    },\n    onKeyDown: handleInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"flex flex-col field_with_errors\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"subject\",\n    className: \"mb-2 form__label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"p-1.5 rounded bg-miru-gray-100\",\n    type: \"text\",\n    name: \"subject\",\n    value: invoiceEmail.subject,\n    onChange: function onChange(e) {\n      return setInvoiceEmail(_objectSpread(_objectSpread({}, invoiceEmail), {}, {\n        subject: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"flex flex-col field_with_errors\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"body\",\n    className: \"mb-2 form__label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"body\",\n    className: \"p-1.5 rounded bg-miru-gray-100\",\n    value: invoiceEmail.message,\n    onChange: function onChange(e) {\n      return setInvoiceEmail(_objectSpread(_objectSpread({}, invoiceEmail), {}, {\n        message: e.target.value\n      }));\n    },\n    rows: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleSubmit,\n    className: cn(\"flex justify-center w-full p-3 mt-6 text-lg font-bold text-white uppercase border border-transparent rounded-md shadow-sm bg-miru-han-purple-1000 hover:bg-miru-han-purple-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-miru-han-purple-600\", {\n      \"hover:bg-miru-chart-green-400 bg-miru-chart-green-600\": status === InvoiceStatus.SUCCESS\n    }),\n    disabled: isDisabled(status),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, buttonText(status))))))));\n};\n\nexport default SendInvoice;","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/Invoices/List/SendInvoice/index.tsx"],"names":["React","useEffect","useRef","useState","invoicesApi","cn","Toastr","useOutsideClick","X","isEmailValid","emailSubject","emailBody","isDisabled","buttonText","ApiStatus","InvoiceStatus","Recipient","email","handleClick","SendInvoice","invoice","setIsSending","isSending","IDLE","status","setStatus","subject","message","recipients","client","invoiceEmail","setInvoiceEmail","newRecipient","setNewRecipient","width","setWidth","modal","input","length","handleSubmit","event","preventDefault","LOADING","payload","invoice_email","sendInvoice","id","notice","data","success","SUCCESS","ERROR","handleRemove","recipient","filter","r","handleInput","key","concat","invoiceNumber","current","focus","map","e","target","value","trim"],"mappings":"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","sourcesContent":["import React, {\n  FormEvent,\n  KeyboardEvent,\n  useEffect,\n  useRef,\n  useState\n} from \"react\";\n\nimport invoicesApi from \"apis/invoices\";\nimport cn from \"classnames\";\nimport Toastr from \"common/Toastr\";\nimport useOutsideClick from \"helpers/outsideClick\";\nimport { X } from \"phosphor-react\";\n\nimport {\n  isEmailValid,\n  emailSubject,\n  emailBody,\n  isDisabled,\n  buttonText\n} from \"./utils\";\n\nimport { ApiStatus as InvoiceStatus } from \"../../../../constants\";\n\ninterface InvoiceEmail {\n  subject: string;\n  message: string;\n  recipients: string[];\n}\n\nconst Recipient: React.FC<{ email: string; handleClick: any }> = ({\n  email,\n  handleClick\n}) => (\n  <div className=\"flex items-center px-2 py-1 m-0.5 space-x-2 border rounded-full bg-miru-gray-400 w-fit\">\n    <p>{email}</p>\n\n    <button\n      type=\"button\"\n      className=\"text-miru-black-1000 hover:text-miru-red-400\"\n      onClick={handleClick}\n    >\n      <X size={14} weight=\"bold\" />\n    </button>\n  </div>\n);\n\nconst SendInvoice: React.FC<any> = ({ invoice, setIsSending, isSending }) => {\n  const [status, setStatus] = useState<InvoiceStatus>(InvoiceStatus.IDLE);\n  const [invoiceEmail, setInvoiceEmail] = useState<InvoiceEmail>({\n    subject: emailSubject(invoice),\n    message: emailBody(invoice),\n    recipients: [invoice.client.email]\n  });\n  const [newRecipient, setNewRecipient] = useState<string>(\"\");\n  const [width, setWidth] = useState<string>(\"10ch\");\n\n  const modal = useRef();\n  const input: React.RefObject<HTMLInputElement> = useRef();\n\n  useOutsideClick(modal, () => setIsSending(false), isSending);\n  useEffect(() => {\n    const length = newRecipient.length;\n\n    setWidth(`${length > 10 ? length : 10}ch`);\n  }, [newRecipient]);\n\n  const handleSubmit = async (event: FormEvent) => {\n    try {\n      event.preventDefault();\n      setStatus(InvoiceStatus.LOADING);\n\n      const payload = { invoice_email: invoiceEmail };\n      const {\n        data: { notice }\n      } = await invoicesApi.sendInvoice(invoice.id, payload);\n\n      Toastr.success(notice);\n      setStatus(InvoiceStatus.SUCCESS);\n    } catch (error) {\n      setStatus(InvoiceStatus.ERROR);\n    }\n  };\n\n  const handleRemove = (recipient: string) => {\n    const recipients = invoiceEmail.recipients.filter((r) => r !== recipient);\n\n    setInvoiceEmail({\n      ...invoiceEmail,\n      recipients\n    });\n  };\n\n  const handleInput = (event: KeyboardEvent) => {\n    const recipients = invoiceEmail.recipients;\n\n    if (isEmailValid(newRecipient) && event.key === \"Enter\") {\n      setInvoiceEmail({\n        ...invoiceEmail,\n        recipients: recipients.concat(newRecipient)\n      });\n      setNewRecipient(\"\");\n    }\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 z-10 overflow-y-auto\"\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <div className=\"flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span\n          className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n          aria-hidden=\"true\"\n        >\n          &#8203;\n        </span>\n\n        <div\n          ref={modal}\n          className=\"relative inline-block overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\"\n        >\n          <div className=\"px-4 pt-5 pb-4 bg-white sm:p-6 sm:pb-4\">\n            <div className=\"flex items-center justify-between mt-2 mb-6\">\n              <h6 className=\"form__title\">\n                Send Invoice #{invoice.invoiceNumber}\n              </h6>\n              <button\n                type=\"button\"\n                className=\"text-miru-gray-1000\"\n                onClick={() => setIsSending(false)}\n              >\n                <X size={16} weight=\"bold\" />\n              </button>\n            </div>\n\n            <form className=\"space-y-4\">\n              <fieldset className=\"flex flex-col field_with_errors\">\n                <label htmlFor=\"to\" className=\"mb-2 form__label\">\n                  To\n                </label>\n\n                <div\n                  onClick={() => input.current.focus()}\n                  className={cn(\n                    \"p-1.5 rounded bg-miru-gray-100 flex flex-wrap\",\n                    { \"h-9\": !invoiceEmail.recipients }\n                  )}\n                >\n                  {invoiceEmail.recipients.map((recipient) => (\n                    <Recipient\n                      key={recipient}\n                      email={recipient}\n                      handleClick={() => handleRemove(recipient)}\n                    />\n                  ))}\n\n                  <input\n                    ref={input}\n                    style={{ width }}\n                    className={cn(\n                      \"py-2 mx-1.5 rounded bg-miru-gray-100 w-fit cursor-text focus:outline-none\",\n                      {\n                        \"text-miru-red-400\": !isEmailValid(newRecipient)\n                      }\n                    )}\n                    type=\"email\"\n                    name=\"to\"\n                    value={newRecipient}\n                    onChange={(e) => setNewRecipient(e.target.value.trim())}\n                    onKeyDown={handleInput}\n                  />\n                </div>\n              </fieldset>\n\n              <fieldset className=\"flex flex-col field_with_errors\">\n                <label htmlFor=\"subject\" className=\"mb-2 form__label\">\n                  Subject\n                </label>\n\n                <input\n                  className=\"p-1.5 rounded bg-miru-gray-100\"\n                  type=\"text\"\n                  name=\"subject\"\n                  value={invoiceEmail.subject}\n                  onChange={(e) =>\n                    setInvoiceEmail({\n                      ...invoiceEmail,\n                      subject: e.target.value\n                    })\n                  }\n                />\n              </fieldset>\n\n              <fieldset className=\"flex flex-col field_with_errors\">\n                <label htmlFor=\"body\" className=\"mb-2 form__label\">\n                  Message\n                </label>\n\n                <textarea\n                  name=\"body\"\n                  className=\"p-1.5 rounded bg-miru-gray-100\"\n                  value={invoiceEmail.message}\n                  onChange={(e) =>\n                    setInvoiceEmail({ ...invoiceEmail, message: e.target.value })\n                  }\n                  rows={5}\n                />\n              </fieldset>\n\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={handleSubmit}\n                  className={cn(\n                    \"flex justify-center w-full p-3 mt-6 text-lg font-bold text-white uppercase border border-transparent rounded-md shadow-sm bg-miru-han-purple-1000 hover:bg-miru-han-purple-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-miru-han-purple-600\",\n                    {\n                      \"hover:bg-miru-chart-green-400 bg-miru-chart-green-600\":\n                        status === InvoiceStatus.SUCCESS\n                    }\n                  )}\n                  disabled={isDisabled(status)}\n                >\n                  {buttonText(status)}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SendInvoice;\n"]},"metadata":{},"sourceType":"module"}