{"ast":null,"code":"var logger = require(\"js-logger\").get(\":javascript:src:apis:axios.ts\");\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport axios from \"axios\";\nimport Toastr from \"../components/common/Toastr\";\naxios.defaults.baseURL = \"/internal_api/v1\";\nexport var setAuthHeaders = function setAuthHeaders() {\n  axios.defaults.headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"X-CSRF-TOKEN\": document.querySelector(\"[name=\\\"csrf-token\\\"]\").getAttribute(\"content\")\n  };\n};\n\nvar handleSuccessResponse = function handleSuccessResponse(response) {\n  if (response) {\n    response.success = response.status === 200;\n\n    if (response.data.notice) {\n      Toastr.success(response.data.notice);\n    }\n  }\n\n  return response;\n};\n\nvar handleErrorResponse = function handleErrorResponse(error) {\n  var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response3$data, _error$response4;\n\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    window.location.href = \"/login\";\n  }\n\n  Toastr.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.notice) || error.message || error.notice || \"Something went wrong!\");\n\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 423) {\n    window.location.href = \"/\";\n  }\n\n  return Promise.reject(error);\n};\n\nexport var registerIntercepts = function registerIntercepts() {\n  axios.interceptors.response.use(handleSuccessResponse, function (error) {\n    return handleErrorResponse(error);\n  });\n};","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/apis/axios.ts"],"names":["axios","Toastr","defaults","baseURL","setAuthHeaders","headers","Accept","document","querySelector","getAttribute","handleSuccessResponse","response","success","status","data","notice","handleErrorResponse","error","window","location","href","message","Promise","reject","registerIntercepts","interceptors","use"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,kBAAzB;AAQA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClCJ,EAAAA,KAAK,CAACE,QAAN,CAAeG,OAAf,GAAyB;AACvBC,IAAAA,MAAM,EAAE,kBADe;AAEvB,oBAAgB,kBAFO;AAGvB,oBAAgBC,QAAQ,CACrBC,aADa,CACC,uBADD,EAEbC,YAFa,CAEA,SAFA;AAHO,GAAzB;AAOD,CARM;;AAUP,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,QAAQ,EAAI;AACxC,MAAIA,QAAJ,EAAc;AACZA,IAAAA,QAAQ,CAACC,OAAT,GAAmBD,QAAQ,CAACE,MAAT,KAAoB,GAAvC;;AACA,QAAIF,QAAQ,CAACG,IAAT,CAAcC,MAAlB,EAA0B;AACxBd,MAAAA,MAAM,CAACW,OAAP,CAAeD,QAAQ,CAACG,IAAT,CAAcC,MAA7B;AACD;AACF;;AACD,SAAOJ,QAAP;AACD,CARD;;AAUA,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AAAA;;AACnC,MAAI,oBAAAA,KAAK,CAACN,QAAN,oEAAgBE,MAAhB,MAA2B,GAA/B,EAAoC;AAClCK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD;;AACDnB,EAAAA,MAAM,CAACgB,KAAP,CACE,qBAAAA,KAAK,CAACN,QAAN,+FAAgBG,IAAhB,gFAAsBG,KAAtB,0BACEA,KAAK,CAACN,QADR,8EACE,iBAAgBG,IADlB,0DACE,sBAAsBC,MADxB,KAEEE,KAAK,CAACI,OAFR,IAGEJ,KAAK,CAACF,MAHR,IAIE,uBALJ;;AAOA,MAAI,qBAAAE,KAAK,CAACN,QAAN,sEAAgBE,MAAhB,MAA2B,GAA/B,EAAoC;AAClCK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACD,CAfD;;AAiBA,OAAO,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtCxB,EAAAA,KAAK,CAACyB,YAAN,CAAmBd,QAAnB,CAA4Be,GAA5B,CAAgChB,qBAAhC,EAAuD,UAAAO,KAAK;AAAA,WAC1DD,mBAAmB,CAACC,KAAD,CADuC;AAAA,GAA5D;AAGD,CAJM","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport axios, { HeadersDefaults } from \"axios\";\nimport Toastr from \"../components/common/Toastr\";\n\naxios.defaults.baseURL = \"/internal_api/v1\";\n\ninterface CommonHeaderProperties extends HeadersDefaults {\n  Accept: string;\n  \"Content-Type\": string;\n  \"X-CSRF-TOKEN\": string;\n}\n\nexport const setAuthHeaders = () => {\n  axios.defaults.headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"X-CSRF-TOKEN\": document\n      .querySelector(\"[name=\\\"csrf-token\\\"]\")\n      .getAttribute(\"content\")\n  } as CommonHeaderProperties;\n};\n\nconst handleSuccessResponse = response => {\n  if (response) {\n    response.success = response.status === 200;\n    if (response.data.notice) {\n      Toastr.success(response.data.notice);\n    }\n  }\n  return response;\n};\n\nconst handleErrorResponse = error => {\n  if (error.response?.status === 401) {\n    window.location.href = \"/login\";\n  }\n  Toastr.error(\n    error.response?.data?.error ||\n      error.response?.data?.notice ||\n      error.message ||\n      error.notice ||\n      \"Something went wrong!\"\n  );\n  if (error.response?.status === 423) {\n    window.location.href = \"/\";\n  }\n  return Promise.reject(error);\n};\n\nexport const registerIntercepts = () => {\n  axios.interceptors.response.use(handleSuccessResponse, error =>\n    handleErrorResponse(error)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}