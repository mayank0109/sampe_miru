{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/payment_settings/index.tsx\",\n    _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:components:payment_settings:index.tsx\");\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nimport React, { useState, useEffect } from \"react\";\nimport { setAuthHeaders, registerIntercepts } from \"apis/axios\";\nimport paymentSettings from \"apis/payment-settings\";\nimport Header from \"./Header\";\nimport SideNav from \"./SideNav\";\nimport { ApiStatus as PaymentSettingsStatus } from \"../../constants\";\n\nvar Connect = require(\"../../../../assets/images/Connect.svg\");\n\nvar connectedCheck = require(\"../../../../assets/images/connected_check.svg\");\n\nvar Connect_Paypal = require(\"../../../../assets/images/ConnectPaypal.svg\");\n\nvar Paypal_Logo = require(\"../../../../assets/images/PaypalLogo.svg\");\n\nvar Stripe_Logo = require(\"../../../../assets/images/stripe_logo.svg\");\n\nvar payment_settings = function payment_settings() {\n  var _React$useState = React.useState(PaymentSettingsStatus.IDLE),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      accountLink = _useState2[0],\n      setAccountLink = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isStripeConnected = _useState4[0],\n      setIsStripeConnected = _useState4[1];\n\n  var connectStripe = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return paymentSettings.connectStripe();\n\n            case 2:\n              res = _context.sent;\n              setAccountLink(res.data.accountLink);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function connectStripe() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchPaymentSettings = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setStatus(PaymentSettingsStatus.LOADING);\n              _context2.next = 4;\n              return paymentSettings.get();\n\n            case 4:\n              res = _context2.sent;\n              setIsStripeConnected(res.data.providers.stripe.connected);\n              setStatus(PaymentSettingsStatus.SUCCESS);\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              setStatus(PaymentSettingsStatus.ERROR);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function fetchPaymentSettings() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (accountLink) {\n      window.location.href = accountLink;\n    }\n  }, [accountLink]);\n  useEffect(function () {\n    setAuthHeaders();\n    registerIntercepts();\n    fetchPaymentSettings();\n  }, [isStripeConnected]);\n  return status === PaymentSettingsStatus.SUCCESS && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex mt-5 mb-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-16 pl-20 py-4 bg-miru-han-purple-1000 flex text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold text-2xl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Payment Settings \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-normal text-sm pt-2 ml-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Connect payment gateways\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-10 px-20 mt-4 bg-miru-gray-100 h-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-36 p-5 bg-white flex flex-row items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pr-12 border-r-2 border-miru-gray-200 w-fit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Stripe_Logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"px-4 font-normal text-sm text-miru-dark-purple-1000 leading-5 w-2/5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, isStripeConnected ? \"Your stripe account is now connected and ready to accept online payments\" : \"Connect with your existing stripe account or create a new account\"), isStripeConnected ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-container mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: connectedCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-1 text-miru-alert-green-800 font-extrabold text-base\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Connected\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connectStripe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Connect,\n    className: \"pr-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-36 p-5 mt-6 bg-white flex justify-between items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pr-12 border-r-2 border-miru-gray-200 w-fit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Paypal_Logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"px-4 font-normal text-sm text-miru-dark-purple-1000 leading-5 w-2/5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Connect with your existing paypal account or create a new account\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Connect_Paypal,\n    className: \"pr-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default payment_settings;","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/payment_settings/index.tsx"],"names":["React","useState","useEffect","setAuthHeaders","registerIntercepts","paymentSettings","Header","SideNav","ApiStatus","PaymentSettingsStatus","Connect","require","connectedCheck","Connect_Paypal","Paypal_Logo","Stripe_Logo","payment_settings","IDLE","status","setStatus","accountLink","setAccountLink","isStripeConnected","setIsStripeConnected","connectStripe","res","data","fetchPaymentSettings","LOADING","get","providers","stripe","connected","SUCCESS","ERROR","window","location","href"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\nimport React, { useState, useEffect } from \"react\";\n\nimport { setAuthHeaders, registerIntercepts } from \"apis/axios\";\nimport paymentSettings from \"apis/payment-settings\";\nimport Header from \"./Header\";\nimport SideNav from \"./SideNav\";\nimport { ApiStatus as PaymentSettingsStatus } from \"../../constants\";\nconst Connect = require(\"../../../../assets/images/Connect.svg\");\nconst connectedCheck = require(\"../../../../assets/images/connected_check.svg\");\nconst Connect_Paypal = require(\"../../../../assets/images/ConnectPaypal.svg\");\nconst Paypal_Logo = require(\"../../../../assets/images/PaypalLogo.svg\");\nconst Stripe_Logo = require(\"../../../../assets/images/stripe_logo.svg\");\n\nconst payment_settings = () => {\n  const [status, setStatus] = React.useState<PaymentSettingsStatus>(\n    PaymentSettingsStatus.IDLE\n  );\n  const [accountLink, setAccountLink] = useState<string>(null);\n  const [isStripeConnected, setIsStripeConnected] = useState<boolean>(null);\n  const connectStripe = async () => {\n    const res = await paymentSettings.connectStripe();\n    setAccountLink(res.data.accountLink);\n  };\n  const fetchPaymentSettings = async () => {\n    try {\n      setStatus(PaymentSettingsStatus.LOADING);\n      const res = await paymentSettings.get();\n      setIsStripeConnected(res.data.providers.stripe.connected);\n      setStatus(PaymentSettingsStatus.SUCCESS);\n    } catch (err) {\n      setStatus(PaymentSettingsStatus.ERROR);\n    }\n  };\n\n  useEffect(() => {\n    if (accountLink) {\n      window.location.href = accountLink;\n    }\n  }, [accountLink]);\n\n  useEffect(() => {\n    setAuthHeaders();\n    registerIntercepts();\n    fetchPaymentSettings();\n  }, [isStripeConnected]);\n\n  return status === PaymentSettingsStatus.SUCCESS && (\n    <React.Fragment>\n      <Header />\n      <div className=\"flex mt-5 mb-10\">\n        <SideNav />\n        <div className=\"flex flex-col\">\n          <div className=\"h-16 pl-20 py-4 bg-miru-han-purple-1000 flex text-white\">\n            <span className=\"font-bold text-2xl\">Payment Settings </span>\n            <span className=\"font-normal text-sm pt-2 ml-4\">\n            Connect payment gateways\n            </span>\n          </div>\n          <div className=\"py-10 px-20 mt-4 bg-miru-gray-100 h-screen\">\n            <div className=\"h-36 p-5 bg-white flex flex-row items-center\">\n              <div className=\"pr-12 border-r-2 border-miru-gray-200 w-fit\">\n                <img src={Stripe_Logo} />\n              </div>\n              <span className=\"px-4 font-normal text-sm text-miru-dark-purple-1000 leading-5 w-2/5\">\n                { isStripeConnected ? \"Your stripe account is now connected and ready to accept online payments\" : \"Connect with your existing stripe account or create a new account\" }\n              </span>\n              {\n                isStripeConnected ?\n                  <div className=\"flex flex-row\">\n                    <div className=\"logo-container mr-1\">\n                      <img src={connectedCheck} />\n                    </div>\n                    <p className=\"ml-1 text-miru-alert-green-800 font-extrabold text-base\">Connected</p>\n                  </div> :\n                  <button\n                    onClick={connectStripe}\n                  >\n                    <img src={Connect} className=\"pr-5\" />\n                  </button>\n              }\n            </div>\n\n            <div className=\"h-36 p-5 mt-6 bg-white flex justify-between items-center\">\n              <div className=\"pr-12 border-r-2 border-miru-gray-200 w-fit\">\n                <img src={Paypal_Logo} />\n              </div>\n              <span className=\"px-4 font-normal text-sm text-miru-dark-purple-1000 leading-5 w-2/5\">\n              Connect with your existing paypal account or create a new account\n              </span>\n              <button>\n                <img src={Connect_Paypal} className=\"pr-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );};\n\nexport default payment_settings;\n"]},"metadata":{},"sourceType":"module"}