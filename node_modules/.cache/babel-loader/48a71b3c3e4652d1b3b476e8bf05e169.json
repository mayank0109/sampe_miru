{"ast":null,"code":"var _jsxFileName = \"/app/app/javascript/src/components/Reports/index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:components:Reports:index.tsx\");\n\nimport React, { useState, useEffect } from \"react\";\nimport { setAuthHeaders, registerIntercepts } from \"apis/axios\";\nimport reports from \"apis/reports\";\nimport applyFilter from \"./api/applyFilter\";\nimport Container from \"./Container\";\nimport EntryContext from \"./context/EntryContext\";\nimport Filters from \"./Filters\";\nimport Header from \"./Header\";\n\nvar Reports = function Reports() {\n  var filterIntialValues = {\n    dateRange: {\n      label: \"All\",\n      value: \"\"\n    },\n    clients: [],\n    teamMember: [],\n    status: [],\n    groupBy: {\n      label: \"None\",\n      value: \"\"\n    }\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeEntries = _useState2[0],\n      setTimeEntries = _useState2[1];\n\n  var _useState3 = useState({\n    clients: [],\n    teamMembers: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterOptions = _useState4[0],\n      getFilterOptions = _useState4[1];\n\n  var _useState5 = useState(filterIntialValues),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedFilter = _useState6[0],\n      setSelectedFilter = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFilterVisible = _useState8[0],\n      setFilterVisibilty = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showNavFilters = _useState10[0],\n      setNavFilters = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filterCounter = _useState12[0],\n      setFilterCounter = _useState12[1];\n\n  var fetchTimeEntries = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return reports.get(\"\");\n\n            case 2:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setTimeEntries(res.data.entries);\n                getFilterOptions(res.data.filterOptions);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchTimeEntries() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setAuthHeaders();\n    registerIntercepts();\n    fetchTimeEntries();\n  }, []);\n\n  var updateFilterCounter = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var counter, filterkey, filterValue;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              counter = 0;\n\n              for (filterkey in selectedFilter) {\n                filterValue = selectedFilter[filterkey];\n\n                if (Array.isArray(filterValue)) {\n                  counter = counter + filterValue.length;\n                } else {\n                  if (filterValue.value !== \"\") {\n                    counter = counter + 1;\n                  }\n                }\n              }\n\n              _context2.next = 4;\n              return setFilterCounter(counter);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateFilterCounter() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    updateFilterCounter();\n    applyFilter(selectedFilter, setTimeEntries, setNavFilters, setFilterVisibilty);\n  }, [selectedFilter]);\n  var contextValues = {\n    entries: timeEntries,\n    filterOptions: filterOptions,\n    selectedFilter: selectedFilter,\n    filterCounter: filterCounter\n  };\n\n  var handleApplyFilter = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(filters) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setSelectedFilter(filters);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleApplyFilter(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var resetFilter = function resetFilter() {\n    setSelectedFilter(filterIntialValues);\n    fetchTimeEntries();\n    setFilterVisibilty(false);\n    setNavFilters(false);\n  };\n\n  var handleRemoveSingleFilter = function handleRemoveSingleFilter(key, value) {\n    var filterValue = selectedFilter[key];\n\n    if (Array.isArray(filterValue)) {\n      var closedFilter = filterValue.filter(function (item) {\n        return item.label !== value;\n      });\n      setSelectedFilter(_objectSpread(_objectSpread({}, selectedFilter), {}, _defineProperty({}, key, closedFilter)));\n    } else {\n      var label = key === \"dateRange\" ? \"All\" : \"None\";\n      setSelectedFilter(_objectSpread(_objectSpread({}, selectedFilter), {}, _defineProperty({}, key, {\n        label: label,\n        value: \"\"\n      })));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EntryContext.Provider, {\n    value: _objectSpread(_objectSpread({}, contextValues), {}, {\n      handleRemoveSingleFilter: handleRemoveSingleFilter\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    showNavFilters: showNavFilters,\n    setFilterVisibilty: setFilterVisibilty,\n    isFilterVisible: isFilterVisible,\n    resetFilter: resetFilter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), isFilterVisible && /*#__PURE__*/React.createElement(Filters, {\n    handleApplyFilter: handleApplyFilter,\n    resetFilter: resetFilter,\n    setFilterVisibilty: setFilterVisibilty,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  })));\n};\n\nexport default Reports;","map":{"version":3,"sources":["/app/app/javascript/src/components/Reports/index.tsx"],"names":["React","useState","useEffect","setAuthHeaders","registerIntercepts","reports","applyFilter","Container","EntryContext","Filters","Header","Reports","filterIntialValues","dateRange","label","value","clients","teamMember","status","groupBy","timeEntries","setTimeEntries","teamMembers","filterOptions","getFilterOptions","selectedFilter","setSelectedFilter","isFilterVisible","setFilterVisibilty","showNavFilters","setNavFilters","filterCounter","setFilterCounter","fetchTimeEntries","get","res","data","entries","updateFilterCounter","counter","filterkey","filterValue","Array","isArray","length","contextValues","handleApplyFilter","filters","resetFilter","handleRemoveSingleFilter","key","closedFilter","filter","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { setAuthHeaders, registerIntercepts } from \"apis/axios\";\nimport reports from \"apis/reports\";\nimport applyFilter from \"./api/applyFilter\";\nimport Container from \"./Container\";\nimport EntryContext from \"./context/EntryContext\";\n\nimport Filters from \"./Filters\";\nimport Header from \"./Header\";\n\nimport { ITimeEntry } from \"./interface\";\n\nconst Reports = () => {\n  const filterIntialValues = {\n    dateRange: { label: \"All\", value: \"\" },\n    clients: [],\n    teamMember: [],\n    status: [],\n    groupBy: { label: \"None\", value: \"\" }\n  };\n\n  const [timeEntries, setTimeEntries] = useState<Array<ITimeEntry>>([]);\n  const [filterOptions, getFilterOptions] = useState({\n    clients: [],\n    teamMembers: []\n  });\n  const [selectedFilter, setSelectedFilter] = useState(filterIntialValues);\n  const [isFilterVisible, setFilterVisibilty] = useState<boolean>(false);\n  const [showNavFilters, setNavFilters] = useState<boolean>(false);\n  const [filterCounter, setFilterCounter] = useState(0);\n\n  const fetchTimeEntries = async () => {\n    const res = await reports.get(\"\");\n    if (res.status == 200) {\n      setTimeEntries(res.data.entries);\n      getFilterOptions(res.data.filterOptions);\n    }\n  };\n\n  useEffect(() => {\n    setAuthHeaders();\n    registerIntercepts();\n    fetchTimeEntries();\n  }, []);\n\n  const updateFilterCounter = async () => {\n    let counter = 0;\n    for (const filterkey in selectedFilter) {\n      const filterValue = selectedFilter[filterkey];\n      if (Array.isArray(filterValue)) {\n        counter = counter + filterValue.length;\n      } else {\n        if (filterValue.value !== \"\") {\n          counter = counter + 1;\n        }\n      }\n    }\n    await setFilterCounter(counter);\n  };\n\n  useEffect(() => {\n    updateFilterCounter();\n    applyFilter(selectedFilter, setTimeEntries, setNavFilters, setFilterVisibilty);\n  }, [selectedFilter]);\n\n  const contextValues = {\n    entries: timeEntries,\n    filterOptions,\n    selectedFilter,\n    filterCounter\n  };\n\n  const handleApplyFilter = async (filters) => {\n    setSelectedFilter(filters);\n  };\n\n  const resetFilter = () => {\n    setSelectedFilter(filterIntialValues);\n    fetchTimeEntries();\n    setFilterVisibilty(false);\n    setNavFilters(false);\n  };\n\n  const handleRemoveSingleFilter = (key, value) => {\n    const filterValue = selectedFilter[key];\n    if (Array.isArray(filterValue)) {\n      const closedFilter = filterValue.filter(item => item.label !== value);\n      setSelectedFilter({ ...selectedFilter, [key]: closedFilter });\n    }\n    else {\n      const label = key === \"dateRange\" ? \"All\" : \"None\";\n      setSelectedFilter({ ...selectedFilter, [key]: { label, value: \"\" } });\n    }\n  };\n\n  return (\n    <div>\n      <EntryContext.Provider value={{\n        ...contextValues,\n        handleRemoveSingleFilter\n      }}>\n        <Header\n          showNavFilters={showNavFilters}\n          setFilterVisibilty={setFilterVisibilty}\n          isFilterVisible={isFilterVisible}\n          resetFilter={resetFilter}\n        />\n        <Container />\n        {isFilterVisible && <Filters\n          handleApplyFilter={handleApplyFilter}\n          resetFilter={resetFilter}\n          setFilterVisibilty={setFilterVisibilty}\n        />}\n      </EntryContext.Provider>\n    </div>\n  );\n};\n\nexport default Reports;\n"]},"metadata":{},"sourceType":"module"}