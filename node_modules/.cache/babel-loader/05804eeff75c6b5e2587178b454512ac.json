{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:helpers:hhmm-parser.ts\");\n\nexport var minutesFromHHMM = function minutesFromHHMM(duration) {\n  var numberDuration = Number(duration);\n\n  if (duration.includes(\":\")) {\n    var _duration$split = duration.split(\":\"),\n        _duration$split2 = _slicedToArray(_duration$split, 2),\n        h = _duration$split2[0],\n        m = _duration$split2[1];\n\n    if (h.length > 2) {\n      h = h.slice(0, 2);\n    }\n\n    if (m.length > 2) {\n      m = m.slice(0, 2);\n    }\n\n    return Number(h) * 60 + Number(m);\n  } else if (numberDuration > 0) {\n    return numberDuration * 60;\n  } else {\n    return 0;\n  }\n};\nexport var minutesToHHMM = function minutesToHHMM(duration) {\n  if (Number.isNaN(duration) || duration <= 0) {\n    return \"00:00\";\n  } else {\n    var hours = (duration / 60).toString().split(\".\")[0];\n    var minutes = (duration % 60).toString();\n    if (hours.length === 1) hours = \"0\".concat(hours);\n    if (minutes.length === 1) minutes = \"0\".concat(minutes);\n    return \"\".concat(hours, \":\").concat(minutes);\n  }\n};","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/helpers/hhmm-parser.ts"],"names":["minutesFromHHMM","duration","numberDuration","Number","includes","split","h","m","length","slice","minutesToHHMM","isNaN","hours","toString","minutes"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAsB;AACnD,MAAMC,cAAc,GAAGC,MAAM,CAACF,QAAD,CAA7B;;AACA,MAAIA,QAAQ,CAACG,QAAT,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,0BAAaH,QAAQ,CAACI,KAAT,CAAe,GAAf,CAAb;AAAA;AAAA,QAAKC,CAAL;AAAA,QAAQC,CAAR;;AACA,QAAID,CAAC,CAACE,MAAF,GAAW,CAAf,EAAkB;AAChBF,MAAAA,CAAC,GAAGA,CAAC,CAACG,KAAF,CAAQ,CAAR,EAAW,CAAX,CAAJ;AACD;;AACD,QAAIF,CAAC,CAACC,MAAF,GAAW,CAAf,EAAkB;AAChBD,MAAAA,CAAC,GAAGA,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAW,CAAX,CAAJ;AACD;;AACD,WAAON,MAAM,CAACG,CAAD,CAAN,GAAY,EAAZ,GAAiBH,MAAM,CAACI,CAAD,CAA9B;AACD,GATD,MASO,IAAIL,cAAc,GAAG,CAArB,EAAwB;AAC7B,WAAOA,cAAc,GAAG,EAAxB;AACD,GAFM,MAEA;AACL,WAAO,CAAP;AACD;AACF,CAhBM;AAkBP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACT,QAAD,EAAsB;AACjD,MAAIE,MAAM,CAACQ,KAAP,CAAaV,QAAb,KAA0BA,QAAQ,IAAI,CAA1C,EAA6C;AAC3C,WAAO,OAAP;AACD,GAFD,MAEO;AACL,QAAIW,KAAK,GAAG,CAACX,QAAQ,GAAG,EAAZ,EAAgBY,QAAhB,GAA2BR,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAZ;AACA,QAAIS,OAAO,GAAG,CAACb,QAAQ,GAAG,EAAZ,EAAgBY,QAAhB,EAAd;AACA,QAAID,KAAK,CAACJ,MAAN,KAAiB,CAArB,EAAwBI,KAAK,cAAOA,KAAP,CAAL;AACxB,QAAIE,OAAO,CAACN,MAAR,KAAmB,CAAvB,EAA0BM,OAAO,cAAOA,OAAP,CAAP;AAC1B,qBAAUF,KAAV,cAAmBE,OAAnB;AACD;AACF,CAVM","sourcesContent":["export const minutesFromHHMM = (duration: string) => {\n  const numberDuration = Number(duration);\n  if (duration.includes(\":\")) {\n    let [h, m] = duration.split(\":\");\n    if (h.length > 2) {\n      h = h.slice(0, 2);\n    }\n    if (m.length > 2) {\n      m = m.slice(0, 2);\n    }\n    return Number(h) * 60 + Number(m);\n  } else if (numberDuration > 0) {\n    return numberDuration * 60;\n  } else {\n    return 0;\n  }\n};\n\nexport const minutesToHHMM = (duration: number) => {\n  if (Number.isNaN(duration) || duration <= 0) {\n    return \"00:00\";\n  } else {\n    let hours = (duration / 60).toString().split(\".\")[0];\n    let minutes = (duration % 60).toString();\n    if (hours.length === 1) hours = `0${hours}`;\n    if (minutes.length === 1) minutes = `0${minutes}`;\n    return `${hours}:${minutes}`;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}