{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/Invoices/Generate/ClientSelection.tsx\",\n    _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:components:Invoices:Generate:ClientSelection.tsx\");\n\nimport React, { useState, useRef } from \"react\";\nimport Select from \"react-select\";\nimport { PencilSimple } from \"phosphor-react\";\nimport { DropdownIndicator } from \"./CustomComponents\";\nimport { reactSelectStyles } from \"./Styles\";\nimport useOutsideClick from \"../../../helpers/outsideClick\";\n\nvar ClientSelection = function ClientSelection(_ref) {\n  var clientList = _ref.clientList,\n      selectedClient = _ref.selectedClient,\n      setSelectedClient = _ref.setSelectedClient,\n      optionSelected = _ref.optionSelected,\n      clientVisible = _ref.clientVisible;\n\n  var _useState = useState(optionSelected),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOptionSelected = _useState2[0],\n      setOptionSelection = _useState2[1];\n\n  var _useState3 = useState(clientVisible),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isClientVisible = _useState4[0],\n      setClientVisible = _useState4[1];\n\n  var wrapperRef = useRef(null);\n  useOutsideClick(wrapperRef, function () {\n    return setClientVisible(false);\n  }, isClientVisible);\n\n  var handleSelectClientClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setClientVisible(true);\n              setOptionSelection(false);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSelectClientClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleGetClientList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setClientVisible(true);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleGetClientList() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleClientChange = function handleClientChange(selection) {\n    setSelectedClient(selection);\n    setClientVisible(false);\n    setOptionSelection(true);\n  };\n\n  React.useEffect(function () {\n    var prePopulatedClient = window.location.search.split(\"?\")[1];\n\n    if (prePopulatedClient) {\n      var selection = clientList.filter(function (client) {\n        return client.label == prePopulatedClient;\n      });\n      selection[0] && handleClientChange(selection[0]);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group\",\n    ref: wrapperRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-normal text-xs text-miru-dark-purple-1000 flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Billed to\", isOptionSelected && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSelectClientClick,\n    className: \"bg-miru-gray-1000 rounded mx-1  p-1 hidden group-hover:block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PencilSimple, {\n    size: 13,\n    color: \"#1D1A31\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))), isClientVisible && /*#__PURE__*/React.createElement(Select, {\n    defaultValue: null,\n    onChange: handleClientChange,\n    options: clientList,\n    placeholder: \"Search\",\n    isSearchable: true,\n    className: \"m-0 mt-2 w-52 text-white\",\n    classNamePrefix: \"m-0 font-medium text-sm text-miru-dark-purple-1000 bg-white\",\n    defaultMenuIsOpen: true,\n    styles: reactSelectStyles.InvoiceDetails,\n    components: {\n      DropdownIndicator: DropdownIndicator,\n      IndicatorSeparator: function IndicatorSeparator() {\n        return null;\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), !isOptionSelected && !isClientVisible && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"py-5 mt-2 px-6 font-bold text-base text-miru-dark-purple-200 bg-white border-2 border-dashed border-miru-dark-purple-200 rounded-md tracking-widest\",\n    onClick: handleGetClientList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"+ ADD CLIENT\"), isOptionSelected && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-bold text-base text-miru-dark-purple-1000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, selectedClient.label), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-normal text-xs text-miru-dark-purple-400 w-52\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, selectedClient.address, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), selectedClient.phone)));\n};\n\nexport default ClientSelection;","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/Invoices/Generate/ClientSelection.tsx"],"names":["React","useState","useRef","Select","PencilSimple","DropdownIndicator","reactSelectStyles","useOutsideClick","ClientSelection","clientList","selectedClient","setSelectedClient","optionSelected","clientVisible","isOptionSelected","setOptionSelection","isClientVisible","setClientVisible","wrapperRef","handleSelectClientClick","handleGetClientList","handleClientChange","selection","useEffect","prePopulatedClient","window","location","search","split","filter","client","label","InvoiceDetails","IndicatorSeparator","address","phone"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Select from \"react-select\";\nimport { PencilSimple } from \"phosphor-react\";\n\nimport { DropdownIndicator } from \"./CustomComponents\";\nimport { reactSelectStyles } from \"./Styles\";\nimport useOutsideClick from \"../../../helpers/outsideClick\";\n\nconst ClientSelection = ({ clientList, selectedClient, setSelectedClient, optionSelected, clientVisible }) => {\n  const [isOptionSelected, setOptionSelection] = useState<boolean>(optionSelected);\n  const [isClientVisible, setClientVisible] = useState<boolean>(clientVisible);\n  const wrapperRef = useRef(null);\n\n  useOutsideClick(wrapperRef, () => setClientVisible(false), isClientVisible);\n\n  const handleSelectClientClick = async () => {\n    setClientVisible(true);\n    setOptionSelection(false);\n  };\n\n  const handleGetClientList = async () => {\n    setClientVisible(true);\n  };\n\n  const handleClientChange = (selection) => {\n    setSelectedClient(selection);\n    setClientVisible(false);\n    setOptionSelection(true);\n  };\n\n  React.useEffect(() => {\n    const prePopulatedClient = window.location.search.split(\"?\")[1];\n    if (prePopulatedClient) {\n      const selection = clientList.filter(\n        (client) => client.label == prePopulatedClient\n      );\n      selection[0] && handleClientChange(selection[0]);\n    }\n  }, []);\n\n  return (\n    <div className=\"group\" ref={wrapperRef}>\n      <p className=\"font-normal text-xs text-miru-dark-purple-1000 flex\">\n        Billed to\n        {isOptionSelected && (\n          <button\n            onClick={handleSelectClientClick}\n            className=\"bg-miru-gray-1000 rounded mx-1  p-1 hidden group-hover:block\"\n          >\n            <PencilSimple size={13} color=\"#1D1A31\" />\n          </button>\n        )}\n      </p>\n\n      {isClientVisible && (\n        <Select\n          defaultValue={null}\n          onChange={handleClientChange}\n          options={clientList}\n          placeholder=\"Search\"\n          isSearchable={true}\n          className=\"m-0 mt-2 w-52 text-white\"\n          classNamePrefix=\"m-0 font-medium text-sm text-miru-dark-purple-1000 bg-white\"\n          defaultMenuIsOpen={true}\n          styles={reactSelectStyles.InvoiceDetails}\n          components={{ DropdownIndicator, IndicatorSeparator: () => null }}\n        />\n      )}\n      {!isOptionSelected && !isClientVisible && (\n        <button\n          className=\"py-5 mt-2 px-6 font-bold text-base text-miru-dark-purple-200 bg-white border-2 border-dashed border-miru-dark-purple-200 rounded-md tracking-widest\"\n          onClick={handleGetClientList}\n        >\n          + ADD CLIENT\n        </button>\n      )}\n      {isOptionSelected && (\n        <div>\n          <p className=\"font-bold text-base text-miru-dark-purple-1000\">\n            {selectedClient.label}\n          </p>\n          <p className=\"font-normal text-xs text-miru-dark-purple-400 w-52\">\n            {selectedClient.address}\n            <br />\n            {selectedClient.phone}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClientSelection;\n"]},"metadata":{},"sourceType":"module"}