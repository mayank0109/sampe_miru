{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/common/Toastr.tsx\",\n    _this = this;\n\nvar logger = require(\"js-logger\").get(\":javascript:src:components:common:Toastr.tsx\");\n\nimport * as React from \"react\";\nimport { toast, Slide } from \"react-toastify\";\n\nvar ToastrComponent = function ToastrComponent(_ref) {\n  var message = _ref.message;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row items-start justify-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mx-4 font-medium leading-5 text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, message));\n};\n\nvar showToastr = function showToastr(message) {\n  toast.success( /*#__PURE__*/React.createElement(ToastrComponent, {\n    message: message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }), {\n    position: toast.POSITION.BOTTOM_CENTER,\n    transition: Slide,\n    theme: \"colored\"\n  });\n};\n\nvar isError = function isError(e) {\n  return e && e.stack && e.message;\n};\n\nvar showErrorToastr = function showErrorToastr(error) {\n  var errorMessage = isError(error) ? error.message : error;\n  toast.error( /*#__PURE__*/React.createElement(ToastrComponent, {\n    message: errorMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }), {\n    position: toast.POSITION.BOTTOM_CENTER,\n    transition: Slide,\n    theme: \"colored\"\n  });\n};\n\nexport var Toastr = {\n  success: showToastr,\n  error: showErrorToastr\n};\nexport default Toastr;","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/components/common/Toastr.tsx"],"names":["React","toast","Slide","ToastrComponent","message","showToastr","success","position","POSITION","BOTTOM_CENTER","transition","theme","isError","e","stack","showErrorToastr","error","errorMessage","Toastr"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,sBACtB;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,uCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDA,OAAtD,CADF,CADsB;AAAA,CAAxB;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAD,OAAO,EAAI;AAC5BH,EAAAA,KAAK,CAACK,OAAN,eAAc,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEF,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,EAAqD;AACnDG,IAAAA,QAAQ,EAAEN,KAAK,CAACO,QAAN,CAAeC,aAD0B;AAEnDC,IAAAA,UAAU,EAAER,KAFuC;AAGnDS,IAAAA,KAAK,EAAE;AAH4C,GAArD;AAKD,CAND;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC;AAAA,SAAIA,CAAC,IAAIA,CAAC,CAACC,KAAP,IAAgBD,CAAC,CAACT,OAAtB;AAAA,CAAjB;;AAEA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,MAAMC,YAAY,GAAGL,OAAO,CAACI,KAAD,CAAP,GAAiBA,KAAK,CAACZ,OAAvB,GAAiCY,KAAtD;AACAf,EAAAA,KAAK,CAACe,KAAN,eAAY,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,EAAwD;AACtDV,IAAAA,QAAQ,EAAEN,KAAK,CAACO,QAAN,CAAeC,aAD6B;AAEtDC,IAAAA,UAAU,EAAER,KAF0C;AAGtDS,IAAAA,KAAK,EAAE;AAH+C,GAAxD;AAKD,CAPD;;AASA,OAAO,IAAMO,MAAM,GAAG;AACpBZ,EAAAA,OAAO,EAAED,UADW;AAEpBW,EAAAA,KAAK,EAAED;AAFa,CAAf;AAKP,eAAeG,MAAf","sourcesContent":["import * as React from \"react\";\n\nimport { toast, Slide } from \"react-toastify\";\n\nconst ToastrComponent = ({ message }) => (\n  <div className=\"flex flex-row items-start justify-start\">\n    <p className=\"mx-4 font-medium leading-5 text-white\">{message}</p>\n  </div>\n);\n\nconst showToastr = message => {\n  toast.success(<ToastrComponent message={message} />, {\n    position: toast.POSITION.BOTTOM_CENTER,\n    transition: Slide,\n    theme: \"colored\"\n  });\n};\n\nconst isError = e => e && e.stack && e.message;\n\nconst showErrorToastr = error => {\n  const errorMessage = isError(error) ? error.message : error;\n  toast.error(<ToastrComponent message={errorMessage} />, {\n    position: toast.POSITION.BOTTOM_CENTER,\n    transition: Slide,\n    theme: \"colored\"\n  });\n};\n\nexport const Toastr = {\n  success: showToastr,\n  error: showErrorToastr\n};\n\nexport default Toastr;\n"]},"metadata":{},"sourceType":"module"}