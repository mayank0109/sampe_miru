{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkhanna/Documents/miru-web/app/javascript/src/common/ChartBar/index.tsx\",\n    _this = this;\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:common:ChartBar:index.tsx\");\n\nimport React, { Fragment } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { minutesToHHMM } from \"../../helpers/hhmm-parser\";\n\nvar Client = function Client(_ref) {\n  var element = _ref.element,\n      totalMinutes = _ref.totalMinutes,\n      index = _ref.index;\n  var chartColor = [\"miru-chart-green\", \"miru-chart-blue\", \"miru-chart-pink\", \"miru-chart-orange\"];\n  var chartColorIndex = index % 4;\n  var randomColor = chartColor[chartColorIndex];\n  var hourPercentage = element.minutes * 100 / totalMinutes;\n  var divStyle = {\n    width: \"\".concat(hourPercentage, \"%\")\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: divStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"registerTip-\".concat(index),\n    effect: \"solid\",\n    backgroundColor: \"white\",\n    textColor: \"#1D1A31\",\n    place: \"top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, element.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-2xl text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, minutesToHHMM(element.minutes))), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-tip\": true,\n    \"data-for\": \"registerTip-\".concat(index),\n    type: \"button\",\n    className: \"bg-\".concat(randomColor, \"-600 w-full h-4 block border-b border-t hover:border-transparent\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar GetClientBar = function GetClientBar(_ref2) {\n  var data = _ref2.data,\n      totalMinutes = _ref2.totalMinutes;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-3 text-tiny text-miru-dark-purple-600 tracking-widest\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"TOTAL HOURS: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }\n  }, minutesToHHMM(totalMinutes))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full bg-gray-200 flex h-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, data.map(function (element, index) {\n    return /*#__PURE__*/React.createElement(Client, {\n      element: element,\n      key: index,\n      index: index,\n      totalMinutes: totalMinutes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex text-tiny text-miru-dark-purple-400 tracking-widest pb-6 justify-between mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, minutesToHHMM(totalMinutes))));\n};\n\nexport default GetClientBar;","map":{"version":3,"sources":["/Users/mayankkhanna/Documents/miru-web/app/javascript/src/common/ChartBar/index.tsx"],"names":["React","Fragment","ReactTooltip","minutesToHHMM","Client","element","totalMinutes","index","chartColor","chartColorIndex","randomColor","hourPercentage","minutes","divStyle","width","name","GetClientBar","data","map"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { IChartBarGraph, ISingleClient } from \"./interface\";\nimport { minutesToHHMM } from \"../../helpers/hhmm-parser\";\n\nconst Client = ({ element, totalMinutes, index }:ISingleClient) => {\n  const chartColor = [\"miru-chart-green\", \"miru-chart-blue\", \"miru-chart-pink\", \"miru-chart-orange\"];\n  const chartColorIndex = index%4;\n  const randomColor = chartColor[chartColorIndex];\n  const hourPercentage = (element.minutes * 100)/totalMinutes;\n\n  const divStyle = {\n    width: `${hourPercentage}%`\n  };\n\n  return (\n    <div style={divStyle}>\n      <ReactTooltip id={`registerTip-${index}`} effect=\"solid\" backgroundColor=\"white\" textColor=\"#1D1A31\" place=\"top\">\n        <p className=\"text-xs\">{element.name}</p>\n        <p className=\"text-2xl text-center\">{minutesToHHMM(element.minutes)}</p>\n      </ReactTooltip>\n      <button\n        data-tip\n        data-for={`registerTip-${index}`}\n        type=\"button\"\n        className={`bg-${randomColor}-600 w-full h-4 block border-b border-t hover:border-transparent`}>\n      </button>\n    </div>\n  );\n};\n\nconst GetClientBar = ({ data, totalMinutes }:IChartBarGraph) => (\n  <Fragment>\n    <p className=\"mb-3 text-tiny text-miru-dark-purple-600 tracking-widest\">\n      TOTAL HOURS: <span className=\"font-medium\">{minutesToHHMM(totalMinutes)}</span>\n    </p>\n    <div className=\"w-full bg-gray-200 flex h-1\">\n      {data.map((element, index) => <Client\n        element={element}\n        key={index}\n        index={index}\n        totalMinutes={totalMinutes}\n      />)\n      }\n    </div>\n    <div className=\"flex text-tiny text-miru-dark-purple-400 tracking-widest pb-6 justify-between mt-3\">\n      <span>\n        0\n      </span>\n      <span>\n        {minutesToHHMM(totalMinutes)}\n      </span>\n    </div>\n  </Fragment>\n);\n\nexport default GetClientBar;\n"]},"metadata":{},"sourceType":"module"}