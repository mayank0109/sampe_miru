{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar logger = require(\"js-logger\").get(\"@saeloun/miru-web:javascript:src:components:Invoices:api:generateInvoice.ts\");\n\nimport generateInvoice from \"apis/generateInvoice\";\n\nvar fetchNewLineItems = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(selectedClient, pageNumber) {\n    var selectedEntries,\n        selectedEntriesString,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            selectedEntries = _args.length > 2 && _args[2] !== undefined ? _args[2] : [];\n\n            if (!selectedClient) {\n              _context.next = 7;\n              break;\n            }\n\n            selectedEntriesString = \"\";\n            selectedEntries.forEach(function (entries) {\n              selectedEntriesString += \"&selected_entries[]=\".concat(entries.timesheet_entry_id);\n            });\n            _context.next = 6;\n            return generateInvoice.getLineItems(selectedClient.value, pageNumber, selectedEntriesString);\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchNewLineItems(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default fetchNewLineItems;","map":{"version":3,"sources":["/app/app/javascript/src/components/Invoices/api/generateInvoice.ts"],"names":["generateInvoice","fetchNewLineItems","selectedClient","pageNumber","selectedEntries","selectedEntriesString","forEach","entries","timesheet_entry_id","getLineItems","value"],"mappings":";;;;;;;;AAAA,OAAOA,eAAP,MAA4B,sBAA5B;;AAEA,IAAMC,iBAAiB;AAAA,sEAAG,iBACxBC,cADwB,EAExBC,UAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxBC,YAAAA,eAHwB,2DAGN,EAHM;;AAAA,iBAKpBF,cALoB;AAAA;AAAA;AAAA;;AAMlBG,YAAAA,qBANkB,GAMM,EANN;AAOtBD,YAAAA,eAAe,CAACE,OAAhB,CAAwB,UAACC,OAAD,EAAa;AACnCF,cAAAA,qBAAqB,kCAA2BE,OAAO,CAACC,kBAAnC,CAArB;AACD,aAFD;AAPsB;AAAA,mBAWTR,eAAe,CAACS,YAAhB,CAA6BP,cAAc,CAACQ,KAA5C,EAAmDP,UAAnD,EAA+DE,qBAA/D,CAXS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBJ,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAeA,eAAeA,iBAAf","sourcesContent":["import generateInvoice from \"apis/generateInvoice\";\n\nconst fetchNewLineItems = async (\n  selectedClient,\n  pageNumber,\n  selectedEntries = [],\n) => {\n  if (selectedClient) {\n    let selectedEntriesString = \"\";\n    selectedEntries.forEach((entries) => {\n      selectedEntriesString += `&selected_entries[]=${entries.timesheet_entry_id}`;\n    });\n\n    return await generateInvoice.getLineItems(selectedClient.value, pageNumber, selectedEntriesString);\n  }\n};\n\nexport default fetchNewLineItems;\n"]},"metadata":{},"sourceType":"module"}